# FROM balenalib/%%BALENA_MACHINE_NAME%%-debian-node
FROM balenalib/%%BALENA_MACHINE_NAME%%-debian-node:10-stretch-build

RUN apt-get update && apt-get install -yq --no-install-recommends \
  rpi.gpio \
  python-dev \
  python-rpi.gpio \
  proftpd \
  apt-utils \
  ffmpeg \
  pigpio \
  gphoto2 \
  libgphoto2-dev \ 
&& apt-get clean && rm -rf /var/lib/apt/lists/*

# Defines our working directory in container
WORKDIR /usr/src/app

# Copies the package.json first for better cache on later pushes
COPY ./package.json package.json

# This install npm dependencies on the balena build server,
# making sure to clean up the artifacts it creates in order to reduce the image size.
RUN JOBS=MAX npm install --production --unsafe-perm && npm cache verify && rm -rf /tmp/*
# RUN echo "LABEL=usb /mnt/storage vfat rw,relatime,discard,data=ordered 0 2" >> /etc/fstab

# This will copy all files in our root to the working  directory in the container
COPY ./ ./

# Enable udevd so that plugged dynamic hardware devices show up in our container.
ENV UDEV=1

# server.js will run when container starts up on the device
CMD modprobe i2c-dev && npm start
